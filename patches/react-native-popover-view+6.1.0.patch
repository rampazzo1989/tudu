diff --git a/node_modules/react-native-popover-view/dist/RNModalPopover.js b/node_modules/react-native-popover-view/dist/RNModalPopover.js
index e9e611b..21d01af 100644
--- a/node_modules/react-native-popover-view/dist/RNModalPopover.js
+++ b/node_modules/react-native-popover-view/dist/RNModalPopover.js
@@ -25,7 +25,7 @@ var __assign = (this && this.__assign) || function () {
     return __assign.apply(this, arguments);
 };
 import React, { Component } from 'react';
-import { Modal } from 'react-native';
+import { View, Modal } from 'react-native';
 import AdaptivePopover from './AdaptivePopover';
 import { DEFAULT_STATUS_BAR_TRANSLUCENT, MULTIPLE_POPOVER_WARNING } from './Constants';
 import { Point } from './Types';
@@ -66,16 +66,17 @@ var RNModalPopover = /** @class */ (function (_super) {
         var _this = this;
         var _a = this.props, statusBarTranslucent = _a.statusBarTranslucent, onCloseStart = _a.onCloseStart, onRequestClose = _a.onRequestClose;
         var visible = this.state.visible;
-        return (React.createElement(Modal, { transparent: true, supportedOrientations: ['portrait', 'portrait-upside-down', 'landscape'], hardwareAccelerated: true, visible: visible, statusBarTranslucent: statusBarTranslucent !== null && statusBarTranslucent !== void 0 ? statusBarTranslucent : DEFAULT_STATUS_BAR_TRANSLUCENT, onShow: function () {
-                RNModalPopover.isShowingInModal = true;
-            }, 
-            // Handles android back button
-            onRequestClose: onRequestClose },
-            React.createElement(AdaptivePopover, __assign({}, this.props, { onCloseStart: function () {
-                    RNModalPopover.isShowingInModal = false;
-                    if (onCloseStart)
-                        onCloseStart();
-                }, onCloseComplete: function () { return _this.setState({ visible: false }); }, getDisplayAreaOffset: function () { return Promise.resolve(new Point(0, 0)); } }))));
+        return (React.createElement(View, null,
+            React.createElement(Modal, { transparent: true, supportedOrientations: ['portrait', 'portrait-upside-down', 'landscape'], hardwareAccelerated: true, visible: visible, statusBarTranslucent: statusBarTranslucent !== null && statusBarTranslucent !== void 0 ? statusBarTranslucent : DEFAULT_STATUS_BAR_TRANSLUCENT, onShow: function () {
+                    RNModalPopover.isShowingInModal = true;
+                }, 
+                // Handles android back button
+                onRequestClose: onRequestClose },
+                React.createElement(AdaptivePopover, __assign({}, this.props, { onCloseStart: function () {
+                        RNModalPopover.isShowingInModal = false;
+                        if (onCloseStart)
+                            onCloseStart();
+                    }, onCloseComplete: function () { return _this.setState({ visible: false }); }, getDisplayAreaOffset: function () { return Promise.resolve(new Point(0, 0)); } })))));
     };
     RNModalPopover.isShowingInModal = false;
     return RNModalPopover;
